name: Full CI/CD Pipeline on Main Push

on:
  push:
    branches:
      - main

env:
  ACR_LOGIN_SERVER: sit72.azurecr.io
  AKS_CLUSTER_NAME: sit72
  RESOURCE_GROUP: deakinuni
  IMAGE_NAME: week10-app

jobs:
  build_and_test:
    name: üß™ Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

  build_and_push_image:
    name: üèóÔ∏è Build and Push Image
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}

      - name: Build and push Docker image to ACR
        run: |
          docker build . -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy_to_staging:
    name: üöÄ Deploy to Staging
    runs-on: ubuntu-latest
    needs: build_and_push_image
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}

      - name: Create staging namespace and deploy
        run: |
          echo "Deploying image ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          kubectl create namespace staging || echo "Namespace 'staging' already exists."
          sed -i 's|IMAGE_PLACEHOLDER|${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g' deployment.yml
          kubectl apply -f deployment.yml -n staging
          kubectl apply -f service.yml -n staging
          echo "‚úÖ Staging deployment initiated."

  approve_and_deploy_to_production:
    name: ‚úÖ Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy_to_staging
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}

      - name: Create production namespace and deploy
        run: |
          echo "Deploying image ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          kubectl create namespace production || echo "Namespace 'production' already exists."
          sed -i 's|IMAGE_PLACEHOLDER|${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|g' deployment.yml
          kubectl apply -f deployment.yml -n production
          kubectl apply -f service.yml -n production
          echo "‚úÖ Production deployment complete."

  destroy_staging:
    name: üóëÔ∏è Destroy Staging Environment
    runs-on: ubuntu-latest
    needs: approve_and_deploy_to_production
    if: always()
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
          
      - name: Delete staging namespace
        run: |
          kubectl delete namespace staging
          echo "‚úÖ Staging environment destroyed."